{"uid":"294c6a0b32077184","name":"test_update_non_existing_route_raises","fullName":"tests.integration.route_serv.test_get_list_route_it#test_update_non_existing_route_raises","historyId":"abf34b120eae426342e5a753c7ac64a9","time":{"start":1759261830158,"stop":1759261830158,"duration":0},"status":"broken","statusMessage":"OSError: Multiple exceptions: [Errno 111] Connect call failed ('::1', 5434, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 5434)","statusTrace":"request = <SubRequest 'db_session' for <Coroutine test_update_non_existing_route_raises>>\nkwargs = {}, func = <function db_session at 0x7f584e3bcae0>\nevent_loop_fixture_id = 'event_loop'\nsetup = <function _wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup at 0x7f584741d3a0>\nsetup_task = <Task finished name='Task-52' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.setup() done, d...exceptions: [Errno 111] Connect call failed ('::1', 5434, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 5434)\")>\n\n    @functools.wraps(fixture)\n    def _asyncgen_fixture_wrapper(request: FixtureRequest, **kwargs: Any):\n        func = _perhaps_rebind_fixture_func(fixture, request.instance)\n        event_loop_fixture_id = _get_event_loop_fixture_id_for_async_fixture(\n            request, func\n        )\n        event_loop = request.getfixturevalue(event_loop_fixture_id)\n        kwargs.pop(event_loop_fixture_id, None)\n        gen_obj = func(**_add_kwargs(func, kwargs, event_loop, request))\n    \n        async def setup():\n            res = await gen_obj.__anext__()  # type: ignore[union-attr]\n            return res\n    \n        context = contextvars.copy_context()\n        setup_task = _create_task_in_context(event_loop, setup(), context)\n>       result = event_loop.run_until_complete(setup_task)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pytest_asyncio/plugin.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/asyncio/base_events.py:725: in run_until_complete\n    return future.result()\n           ^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pytest_asyncio/plugin.py:340: in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/conftest.py:101: in db_session\n    async with engine.begin() as conn:\n               ^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/contextlib.py:214: in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/engine.py:1066: in begin\n    async with conn:\n               ^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/base.py:121: in __aenter__\n    return await self.start(is_ctxmanager=True)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/engine.py:274: in start\n    await greenlet_spawn(self.sync_engine.connect)\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn\n    result = context.throw(*sys.exc_info())\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/engine/base.py:3277: in connect\n    return self._connection_cls(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/engine/base.py:143: in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/engine/base.py:3301: in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py:447: in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py:1264: in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py:711: in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/impl.py:177: in _do_get\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/impl.py:175: in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py:388: in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py:673: in __init__\n    self.__connect()\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py:899: in __connect\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__\n    raise exc_value.with_traceback(exc_tb)\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py:895: in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/engine/create.py:661: in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/engine/default.py:629: in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:964: in connect\n    await_only(creator_fn(*arg, **kw)),\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only\n    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn\n    value = await result\n            ^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connection.py:2421: in connect\n    return await connect_utils._connect(\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connect_utils.py:1075: in _connect\n    raise last_error or exceptions.TargetServerAttributeNotMatched(\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connect_utils.py:1049: in _connect\n    conn = await _connect_addr(\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connect_utils.py:886: in _connect_addr\n    return await __connect_addr(params, True, *args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connect_utils.py:931: in __connect_addr\n    tr, pr = await connector\n             ^^^^^^^^^^^^^^^\n../../../.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connect_utils.py:802: in _create_ssl_connection\n    tr, pr = await loop.create_connection(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_UnixSelectorEventLoop running=False closed=False debug=False>\nprotocol_factory = <function _create_ssl_connection.<locals>.<lambda> at 0x7f584741c2c0>\nhost = 'localhost', port = 5434\n\n    async def create_connection(\n            self, protocol_factory, host=None, port=None,\n            *, ssl=None, family=0,\n            proto=0, flags=0, sock=None,\n            local_addr=None, server_hostname=None,\n            ssl_handshake_timeout=None,\n            ssl_shutdown_timeout=None,\n            happy_eyeballs_delay=None, interleave=None,\n            all_errors=False):\n        \"\"\"Connect to a TCP server.\n    \n        Create a streaming transport connection to a given internet host and\n        port: socket family AF_INET or socket.AF_INET6 depending on host (or\n        family if specified), socket type SOCK_STREAM. protocol_factory must be\n        a callable returning a protocol instance.\n    \n        This method is a coroutine which will try to establish the connection\n        in the background.  When successful, the coroutine returns a\n        (transport, protocol) pair.\n        \"\"\"\n        if server_hostname is not None and not ssl:\n            raise ValueError('server_hostname is only meaningful with ssl')\n    \n        if server_hostname is None and ssl:\n            # Use host as default for server_hostname.  It is an error\n            # if host is empty or not set, e.g. when an\n            # already-connected socket was passed or when only a port\n            # is given.  To avoid this error, you can pass\n            # server_hostname='' -- this will bypass the hostname\n            # check.  (This also means that if host is a numeric\n            # IP/IPv6 address, we will attempt to verify that exact\n            # address; this will probably fail, but it is possible to\n            # create a certificate for a specific IP address, so we\n            # don't judge it here.)\n            if not host:\n                raise ValueError('You must set server_hostname '\n                                 'when using ssl without a host')\n            server_hostname = host\n    \n        if ssl_handshake_timeout is not None and not ssl:\n            raise ValueError(\n                'ssl_handshake_timeout is only meaningful with ssl')\n    \n        if ssl_shutdown_timeout is not None and not ssl:\n            raise ValueError(\n                'ssl_shutdown_timeout is only meaningful with ssl')\n    \n        if sock is not None:\n            _check_ssl_socket(sock)\n    \n        if happy_eyeballs_delay is not None and interleave is None:\n            # If using happy eyeballs, default to interleave addresses by family\n            interleave = 1\n    \n        if host is not None or port is not None:\n            if sock is not None:\n                raise ValueError(\n                    'host/port and sock can not be specified at the same time')\n    \n            infos = await self._ensure_resolved(\n                (host, port), family=family,\n                type=socket.SOCK_STREAM, proto=proto, flags=flags, loop=self)\n            if not infos:\n                raise OSError('getaddrinfo() returned empty list')\n    \n            if local_addr is not None:\n                laddr_infos = await self._ensure_resolved(\n                    local_addr, family=family,\n                    type=socket.SOCK_STREAM, proto=proto,\n                    flags=flags, loop=self)\n                if not laddr_infos:\n                    raise OSError('getaddrinfo() returned empty list')\n            else:\n                laddr_infos = None\n    \n            if interleave:\n                infos = _interleave_addrinfos(infos, interleave)\n    \n            exceptions = []\n            if happy_eyeballs_delay is None:\n                # not using happy eyeballs\n                for addrinfo in infos:\n                    try:\n                        sock = await self._connect_sock(\n                            exceptions, addrinfo, laddr_infos)\n                        break\n                    except OSError:\n                        continue\n            else:  # using happy eyeballs\n                sock = (await staggered.staggered_race(\n                    (\n                        # can't use functools.partial as it keeps a reference\n                        # to exceptions\n                        lambda addrinfo=addrinfo: self._connect_sock(\n                            exceptions, addrinfo, laddr_infos\n                        )\n                        for addrinfo in infos\n                    ),\n                    happy_eyeballs_delay,\n                    loop=self,\n                ))[0]  # can't use sock, _, _ as it keeks a reference to exceptions\n    \n            if sock is None:\n                exceptions = [exc for sub in exceptions for exc in sub]\n                try:\n                    if all_errors:\n                        raise ExceptionGroup(\"create_connection failed\", exceptions)\n                    if len(exceptions) == 1:\n                        raise exceptions[0]\n                    elif exceptions:\n                        # If they all have the same str(), raise one.\n                        model = str(exceptions[0])\n                        if all(str(exc) == model for exc in exceptions):\n                            raise exceptions[0]\n                        # Raise a combined exception so the user can see all\n                        # the various error messages.\n>                       raise OSError('Multiple exceptions: {}'.format(\n                            ', '.join(str(exc) for exc in exceptions)))\nE                           OSError: Multiple exceptions: [Errno 111] Connect call failed ('::1', 5434, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 5434)\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/asyncio/base_events.py:1179: OSError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1759261813745,"stop":1759261813745,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1759261813745,"stop":1759261813745,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1759261813745,"stop":1759261813811,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759261813811,"stop":1759261813811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1759261813811,"stop":1759261813812,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop","time":{"start":1759261813812,"stop":1759261813813,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop_policy","time":{"start":1759261813812,"stop":1759261813812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"db_session","time":{"start":1759261830158,"stop":1759261830160,"duration":2},"status":"broken","statusMessage":"OSError: Multiple exceptions: [Errno 111] Connect call failed ('::1', 5434, 0, 0), [Errno 111] Connect call failed ('127.0.0.1', 5434)\n","statusTrace":"  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1196, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/_pytest/fixtures.py\", line 930, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pytest_asyncio/plugin.py\", line 345, in _asyncgen_fixture_wrapper\n    result = event_loop.run_until_complete(setup_task)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/asyncio/base_events.py\", line 725, in run_until_complete\n    return future.result()\n           ~~~~~~~~~~~~~^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/pytest_asyncio/plugin.py\", line 340, in setup\n    res = await gen_obj.__anext__()  # type: ignore[union-attr]\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Testing_and_debbug/Testing_and_debbug/tests/conftest.py\", line 101, in db_session\n    async with engine.begin() as conn:\n               ~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/contextlib.py\", line 214, in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/engine.py\", line 1066, in begin\n    async with conn:\n               ^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/base.py\", line 121, in __aenter__\n    return await self.start(is_ctxmanager=True)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/engine.py\", line 274, in start\n    await greenlet_spawn(self.sync_engine.connect)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 201, in greenlet_spawn\n    result = context.throw(*sys.exc_info())\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 3277, in connect\n    return self._connection_cls(self)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 143, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 3301, in raw_connection\n    return self.pool.connect()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 447, in connect\n    return _ConnectionFairy._checkout(self)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 1264, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 711, in checkout\n    rec = pool._do_get()\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/impl.py\", line 177, in _do_get\n    with util.safe_reraise():\n         ~~~~~~~~~~~~~~~~~^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/impl.py\", line 175, in _do_get\n    return self._create_connection()\n           ~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 388, in _create_connection\n    return _ConnectionRecord(self)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 673, in __init__\n    self.__connect()\n    ~~~~~~~~~~~~~~^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 899, in __connect\n    with util.safe_reraise():\n         ~~~~~~~~~~~~~~~~~^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 895, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ~~~~~~~~~~~~~~~~~~~~^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/engine/create.py\", line 661, in connect\n    return dialect.connect(*cargs, **cparams)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/engine/default.py\", line 629, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n           ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py\", line 964, in connect\n    await_only(creator_fn(*arg, **kw)),\n    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 132, in await_only\n    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501\n           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 196, in greenlet_spawn\n    value = await result\n            ^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connection.py\", line 2421, in connect\n    return await connect_utils._connect(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<20 lines>...\n    )\n    ^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connect_utils.py\", line 1075, in _connect\n    raise last_error or exceptions.TargetServerAttributeNotMatched(\n    ...<2 lines>...\n    )\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connect_utils.py\", line 1049, in _connect\n    conn = await _connect_addr(\n           ^^^^^^^^^^^^^^^^^^^^\n    ...<6 lines>...\n    )\n    ^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connect_utils.py\", line 886, in _connect_addr\n    return await __connect_addr(params, True, *args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connect_utils.py\", line 931, in __connect_addr\n    tr, pr = await connector\n             ^^^^^^^^^^^^^^^\n  File \"/home/runner/.cache/pypoetry/virtualenvs/ppo-_4RQizgT-py3.13/lib/python3.13/site-packages/asyncpg/connect_utils.py\", line 802, in _create_ssl_connection\n    tr, pr = await loop.create_connection(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<2 lines>...\n        host, port)\n        ^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/asyncio/base_events.py\", line 1179, in create_connection\n    raise OSError('Multiple exceptions: {}'.format(\n        ', '.join(str(exc) for exc in exceptions)))\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"event_loop::finalizer","time":{"start":1759261840784,"stop":1759261840784,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1759261840784,"stop":1759261840784,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_restore_policy","time":{"start":1759261840784,"stop":1759261840784,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1759261840784,"stop":1759261840784,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests.integration.route_serv"},{"name":"suite","value":"test_get_list_route_it"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2736-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.route_serv.test_get_list_route_it"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"3544e0e942960f71","status":"passed","time":{"start":1758953677631,"stop":1758953677652,"duration":21}},{"uid":"cd4ca6e8875f5f7d","status":"passed","time":{"start":1758951887815,"stop":1758951887837,"duration":22}}]},"tags":["asyncio"]},"source":"294c6a0b32077184.json","parameterValues":[]}