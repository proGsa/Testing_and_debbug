name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}/src

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user -d test_db"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install --with dev
          poetry run pip install allure-pytest

      - name: Run unit tests
        run: |
          poetry run pytest tests/unit/ -v \
            --alluredir=allure-results/unit \
            --junitxml=test-reports/unit-tests.xml
        env:
          DATABASE_URL: postgresql+asyncpg://test_user:test_password@localhost:5432/test_db
          TEST_ENV: unit

      - name: Upload unit test results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: |
            allure-results/unit/
            test-reports/unit-tests.xml
        if: always()

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    if: needs.unit-tests.result == 'success'
    env:
      PYTHONPATH: ${{ github.workspace }}/src

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user -d test_db"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install --with dev
          poetry run pip install allure-pytest

      - name: Run integration tests
        run: |
          poetry run pytest tests/integration/ -v \
            --alluredir=allure-results/integration \
            --junitxml=test-reports/integration-tests.xml
        env:
          DATABASE_URL: postgresql+asyncpg://test_user:test_password@localhost:5432/test_db
          TEST_ENV: integration

        if: always()
        env:
          DATABASE_URL: postgresql+asyncpg://test_user:test_password@localhost:5432/test_db

      - name: Upload integration test results
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            allure-results/integration/
            test-reports/integration-tests.xml
        if: always()

  allure-report:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    steps:
      - name: Download unit test results
        uses: actions/download-artifact@v4
        with:
          name: unit-test-results
          path: allure-results/unit

      - name: Download integration test results
        uses: actions/download-artifact@v4
        with:
          name: integration-test-results
          path: allure-results/integration

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@v1.8
        with:
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GH_PAT }}
          publish_dir: allure-report
